{"version":3,"sources":["components/Error.js","components/Form.js","components/Spending.js","components/List.js","components/Manager.js","components/Question.js","App.js","reportWebVitals.js","index.js"],"names":["Error","message","className","Form","setExpense","setThereAreNewExpense","useState","spendingName","setSpending","amountBySpending","setAmountBySpending","error","setError","onSubmit","e","preventDefault","isNaN","trim","spending","id","nanoid","name","amount","type","placeholder","value","onChange","target","parseInt","Spending","List","expenses","map","Manager","budget","remainder","alert","setAlert","useEffect","Question","setBudget","setRemainder","setShowQuestion","setAmount","App","showQuestion","thereAreNewExpense","setExpenses","expense","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAGMA,EAAQ,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACb,OACI,mCACI,mBAAGC,UAAU,2BAAb,SAAyCD,OCA/CE,EAAO,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,WAAYC,EAA4B,EAA5BA,sBAA4B,EAChBC,mBAAS,IADO,mBAC7CC,EAD6C,KAC/BC,EAD+B,OAEJF,mBAAS,GAFL,mBAE7CG,EAF6C,KAE3BC,EAF2B,OAG1BJ,oBAAS,GAHiB,mBAG7CK,EAH6C,KAGtCC,EAHsC,KAsBpD,OACI,mCACI,uBAAMC,SAnBS,SAACC,GAEpB,GADAA,EAAEC,iBACEN,EAAmB,GAAKO,MAAMP,IAA6C,KAAxBF,EAAaU,OAChEL,GAAS,OADb,CAIAA,GAAS,GACT,IAAMM,EAAW,CACbC,GAAIC,cACJC,KAAMd,EACNe,OAAQb,GAEZL,EAAWc,GACXb,GAAsB,GACtBG,EAAY,IACZE,EAAoB,KAIhB,UACI,yDAEIC,EACM,cAAC,EAAD,CAAOV,QAAQ,uCACf,KAEV,sBAAKC,UAAU,QAAf,UACI,2CACA,uBACIqB,KAAK,OACLrB,UAAU,eACVsB,YAAY,iBACZC,MAAOlB,EACPmB,SAAU,SAAAZ,GAAC,OAAIN,EAAYM,EAAEa,OAAOF,aAG5C,sBAAKvB,UAAU,QAAf,UACI,6CACA,uBACIqB,KAAK,SACLrB,UAAU,eACVsB,YAAY,UACZC,MAAOT,MAAMP,GAAoB,GAAKA,EACtCiB,SAAU,SAAAZ,GACNJ,EAAoBkB,SAASd,EAAEa,OAAOF,MAAO,WAIzD,8BACI,uBACIF,KAAK,SACLrB,UAAU,8BACVuB,MAAM,oBC5DxBI,EAAW,SAAC,GAAe,IAAbJ,EAAY,EAAZA,MAChB,OACI,6BACI,8BACI,iCAASA,EAAMJ,OACf,uBAAMnB,UAAU,QAAhB,cAA0BuB,EAAMH,gBCJ1CQ,EAAO,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACZ,OACI,qCACI,iDACA,oBAAI7B,UAAU,oBAAd,SACK6B,EAASC,KAAI,SAAAd,GAAQ,OAAI,cAAC,EAAD,CAA4BO,MAAOP,GAApBA,EAASC,aCN5Dc,EAAU,SAAC,GAGV,IAFHC,EAEE,EAFFA,OACAC,EACE,EADFA,UACE,EACwB7B,mBAAS,uBADjC,mBACK8B,EADL,KACYC,EADZ,KAoBF,OAlBAC,qBAAU,WAOFD,EADCH,EAAS,EAAKC,EAFP,qBAKFD,EAAS,GAAMC,EANX,sBADD,yBAcd,CAACA,EAAWD,IAGX,qCACI,sBAAKhC,UAAU,sBAAf,2BACmBgC,KAEnB,sBAAKhC,UAAWkC,EAAhB,2BACmBD,SC5BzBI,EAAW,SAAC,GAIX,IAHHC,EAGE,EAHFA,UACAC,EAEE,EAFFA,aACAC,EACE,EADFA,gBACE,EAC0BpC,mBAAS,GADnC,mBACKgB,EADL,KACaqB,EADb,OAEwBrC,oBAAS,GAFjC,mBAEKK,EAFL,KAEYC,EAFZ,KAiBF,OACI,qCACI,2EACCD,EACK,cAAC,EAAD,CACEV,QAAQ,wCAEV,KACN,uBAAMY,SAnBS,SAACC,GACpBA,EAAEC,iBACEO,EAAS,GAAKN,MAAMM,GACpBV,GAAS,IAGbA,GAAS,GACT4B,EAAUlB,GACVmB,EAAanB,GACboB,GAAgB,KAUZ,UACI,uBACInB,KAAK,SACLrB,UAAU,eACVsB,YAAY,wBACZE,SA3BO,SAACZ,GACpB6B,EAAUf,SAASd,EAAEa,OAAOF,MAAO,QA4B3B,uBACIF,KAAK,SACLrB,UAAU,8BACVuB,MAAM,mBCsBXmB,MA3Df,WAAgB,IAAD,EAC2BtC,oBAAS,GADpC,mBACNuC,EADM,KACQH,EADR,OAEuCpC,oBAAS,GAFhD,mBAENwC,EAFM,KAEczC,EAFd,OAGmBC,mBAAS,IAH5B,mBAGNyB,EAHM,KAGIgB,EAHJ,OAIiBzC,mBAAS,IAJ1B,mBAIN0C,EAJM,KAIG5C,EAJH,OAKeE,mBAAS,GALxB,mBAKN4B,EALM,KAKEM,EALF,OAMqBlC,mBAAS,GAN9B,mBAMN6B,EANM,KAMKM,EANL,KAoBb,OAXAH,qBAAU,WACJQ,IACFC,EAAY,GAAD,mBACNhB,GADM,CAETiB,KAEF3C,GAAsB,GACtBoC,EAAaN,EAAYa,EAAQ1B,WAElC,CAAC0B,EAASjB,EAAUe,EAAoBX,IAGzC,sBAAKjC,UAAU,YAAf,UACE,iCACE,sDAEF,qBAAKA,UAAU,gCAAf,SACG2C,EAEG,cAAC,EAAD,CACEL,UAAWA,EACXC,aAAcA,EACdC,gBAAiBA,IAInB,sBAAKxC,UAAU,MAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,cAAC,EAAD,CACEE,WAAYA,EACZC,sBAAuBA,MAG3B,sBAAKH,UAAU,kBAAf,UACE,cAAC,EAAD,CACE6B,SAAUA,IAEZ,cAAC,EAAD,CACEG,OAAQA,EACRC,UAAWA,gBC1Cdc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.237d3be4.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\nimport React from 'react'\n\nconst Error = ({ message }) => {\n    return (\n        <>\n            <p className=\"alert alert-danger error\">{message}</p>\n        </>\n    )\n}\n\nError.propTypes = {\n    message: PropTypes.string.isRequired\n}\n\nexport { Error }\n\n","/* eslint-disable no-unused-vars */\nimport { nanoid } from \"nanoid\";\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { Error } from './Error';\n\nconst Form = ({ setExpense, setThereAreNewExpense }) => {\n    const [spendingName, setSpending] = useState('')\n    const [amountBySpending, setAmountBySpending] = useState(0)\n    const [error, setError] = useState(false)\n\n    const handleOnSubmit = (e) => {\n        e.preventDefault();\n        if (amountBySpending < 1 || isNaN(amountBySpending) || spendingName.trim() === '') {\n            setError(true)\n            return\n        }\n        setError(false)\n        const spending = {\n            id: nanoid(),\n            name: spendingName,\n            amount: amountBySpending\n        }\n        setExpense(spending)\n        setThereAreNewExpense(true)\n        setSpending('')\n        setAmountBySpending(0)\n    }\n    return (\n        <>\n            <form onSubmit={handleOnSubmit}>\n                <h2>Tus gastos han sido en:</h2>\n                {\n                    error\n                        ? <Error message=\"Algo ha ido mal, Intenta de nuevo.\" />\n                        : null\n                }\n                <div className=\"campo\">\n                    <label>Nombre</label>\n                    <input\n                        type=\"text\"\n                        className=\"u-full-width\"\n                        placeholder=\"Ej. Transporte\"\n                        value={spendingName}\n                        onChange={e => setSpending(e.target.value)}\n                    />\n                </div>\n                <div className=\"campo\">\n                    <label>Cantidad</label>\n                    <input\n                        type=\"number\"\n                        className=\"u-full-width\"\n                        placeholder=\"Ej. 300\"\n                        value={isNaN(amountBySpending) ? '' : amountBySpending}\n                        onChange={e => {\n                            setAmountBySpending(parseInt(e.target.value, 10))\n                        }}\n                    />\n                </div>\n                <div>\n                    <input\n                        type=\"submit\"\n                        className=\"button-primary u-full-width\"\n                        value=\"Agregar\"\n                    />\n                </div>\n            </form>\n        </>\n    )\n}\n\nForm.propTypes = {\n    setExpense: PropTypes.func.isRequired,\n    setThereAreNewExpense: PropTypes.func.isRequired\n}\n\nexport { Form };\n\n","import PropTypes from 'prop-types'\nimport React from 'react'\n\nconst Spending = ({ value }) => {\n    return (\n        <li>\n            <p>\n                <strong>{value.name}</strong>\n                <span className=\"gasto\">${value.amount}</span>\n            </p>\n        </li>\n    )\n}\n\nSpending.propTypes = {\n    value: PropTypes.object.isRequired\n}\n\nexport { Spending }\n\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Spending } from \"./Spending\";\n\nconst List = ({ expenses }) => {\n    return (\n        <>\n            <h2>Lista de gastos</h2>\n            <ul className=\"gastos-realizados\">\n                {expenses.map(spending => <Spending key={spending.id} value={spending} />)}\n            </ul>\n        </>\n    )\n}\nList.propTypes = {\n    expenses: PropTypes.array.isRequired\n}\nexport { List };\n\n","import PropTypes from 'prop-types'\nimport React, { useEffect, useState } from 'react'\n\nconst Manager = ({\n    budget,\n    remainder\n}) => {\n    const [alert, setAlert] = useState('alert alert-success')\n    useEffect(() => {\n        const alerts = {\n            success: 'alert alert-success',\n            warining: 'alert alert-warning',\n            danger: 'alert alert-danger'\n        }\n        if ((budget / 4) > remainder) {\n            setAlert(alerts.danger)\n        }\n        else if ((budget / 2) >= remainder) {\n            setAlert(alerts.warining)\n        }\n        else {\n            setAlert(alerts.success)\n        }\n\n    }, [remainder, budget])\n\n    return (\n        <>\n            <div className=\"alert alert-primary\">\n                Presupuesto: ${budget}\n            </div>\n            <div className={alert}>\n                Disponible:  ${remainder}\n            </div>\n        </>\n    )\n}\n\nManager.propTypes = {\n    budget: PropTypes.number.isRequired,\n    remainder: PropTypes.number.isRequired\n}\n\nexport { Manager }\n\n","import PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { Error } from \"./Error\";\n\nconst Question = ({\n    setBudget,\n    setRemainder,\n    setShowQuestion\n}) => {\n    const [amount, setAmount] = useState(0)\n    const [error, setError] = useState(false)\n    const handleOnChange = (e) => {\n        setAmount(parseInt(e.target.value, 10))\n    }\n    const handleOnSubmit = (e) => {\n        e.preventDefault();\n        if (amount < 1 || isNaN(amount)) {\n            setError(true)\n            return\n        }\n        setError(false)\n        setBudget(amount)\n        setRemainder(amount)\n        setShowQuestion(false)\n    }\n    return (\n        <>\n            <h2>Â¿ Cual es tu presepuesto esta semana ?</h2>\n            {error\n                ? <Error\n                    message=\"Vuelve a Intentar, Valor NO Valido.\"\n                />\n                : null}\n            <form onSubmit={handleOnSubmit} >\n                <input\n                    type=\"number\"\n                    className=\"u-full-width\"\n                    placeholder=\"Coloca tu presupuesto\"\n                    onChange={handleOnChange}\n                />\n                <input\n                    type=\"submit\"\n                    className=\"button-primary u-full-width\"\n                    value=\"Agregar\"\n                />\n            </form>\n        </>\n    )\n}\n\nQuestion.propTypes = {\n    setBudget: PropTypes.func.isRequired,\n    setRemainder: PropTypes.func.isRequired,\n    setShowQuestion: PropTypes.func.isRequired\n}\n\nexport { Question };\n\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { Form } from \"./components/Form\";\nimport { List } from \"./components/List\";\nimport { Manager } from './components/Manager';\nimport { Question } from \"./components/Question\";\nfunction App() {\n  const [showQuestion, setShowQuestion] = useState(true)\n  const [thereAreNewExpense, setThereAreNewExpense] = useState(false)\n  const [expenses, setExpenses] = useState([])\n  const [expense, setExpense] = useState({})\n  const [budget, setBudget] = useState(0)\n  const [remainder, setRemainder] = useState(0)\n\n\n  useEffect(() => {\n    if (thereAreNewExpense) {\n      setExpenses([\n        ...expenses,\n        expense\n      ])\n      setThereAreNewExpense(false)\n      setRemainder(remainder - expense.amount)\n    }\n  }, [expense, expenses, thereAreNewExpense, remainder])\n\n  return (\n    <div className=\"container\">\n      <header>\n        <h1>Presupuesto Semana</h1>\n      </header>\n      <div className=\"contenido-principal contenido\">\n        {showQuestion\n          ? (\n            <Question\n              setBudget={setBudget}\n              setRemainder={setRemainder}\n              setShowQuestion={setShowQuestion}\n            />\n          )\n          : (\n            <div className=\"row\">\n              <div className=\"one-half column\">\n                <Form\n                  setExpense={setExpense}\n                  setThereAreNewExpense={setThereAreNewExpense}\n                />\n              </div>\n              <div className=\"one-half column\">\n                <List\n                  expenses={expenses}\n                />\n                <Manager\n                  budget={budget}\n                  remainder={remainder}\n                />\n              </div>\n            </div>\n          )\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}